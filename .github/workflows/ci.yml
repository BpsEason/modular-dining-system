name: CI and Deploy
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: modular_dining_system
        ports:
          - 3306:3306
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v3
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: pdo_mysql, redis
      - name: Install PHP Dependencies
        run: cd laravel-app && composer install --no-dev --no-interaction --prefer-dist
      - name: Copy .env.example to .env
        run: cp laravel-app/.env.example laravel-app/.env
      - name: Generate Laravel App Key
        run: cd laravel-app && php artisan key:generate
      - name: Wait for MySQL to be ready
        run: |
          for i in `seq 1 10`; do
            nc -z 127.0.0.1 3306 && break
            echo "Waiting for MySQL... ($i/10)"
            sleep 1
          done
      - name: Run Laravel Migrations and Seeders
        run: cd laravel-app && php artisan migrate --seed --force
      - name: Run Laravel Tests with Coverage
        run: cd laravel-app && ./vendor/bin/phpunit --coverage-clover coverage.xml
      - name: Upload Coverage Report
        uses: codecov/codecov-action@v3
        with:
          files: ./laravel-app/coverage.xml

  vue-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install Vue Frontend Dependencies
        run: cd vue-frontend && npm install
      - name: Run Vue Tests with Coverage
        run: cd vue-frontend && npm run test -- --coverage
      - name: Upload Coverage Report
        uses: codecov/codecov-action@v3
        with:
          files: ./vue-frontend/coverage/coverage-final.json
          flags: vue-frontend
          name: codecov-vue

  fastapi-tests:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install Python Dependencies
        run: cd fastapi-service && pip install -r requirements.txt
      - name: Run FastAPI Tests
        run: cd fastapi-service && pytest

  deploy:
    runs-on: ubuntu-latest
    needs: [laravel-tests, vue-tests, fastapi-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push Laravel Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/laravel-app:latest ./laravel-app
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/laravel-app:latest
      - name: Build and Push FastAPI Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-service:latest ./fastapi-service
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-service:latest
      - name: Build and Push Vue Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/vue-frontend:latest ./vue-frontend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/vue-frontend:latest
